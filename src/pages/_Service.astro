<div id="service" class="service sec-inner">
  <div class="l-inner service__inner">
    <div class="service__text">
      <span class="layer-open service-trigger">
        <svg id="_レイヤー_1" data-name="レイヤー 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 219.59 59.31">
          <path class="service-path" d="M32.59,18.42h-13.75v-4.22c0-1.97-.18-3.22-.53-3.76-.35-.54-.94-.81-1.76-.81-.89,0-1.56,.36-2.02,1.09-.46,.73-.69,1.83-.69,3.31,0,1.9,.26,3.33,.77,4.29,.49,.96,1.88,2.12,4.18,3.48,6.59,3.91,10.74,7.12,12.45,9.63,1.71,2.51,2.57,6.55,2.57,12.13,0,4.06-.47,7.04-1.42,8.96-.95,1.92-2.78,3.53-5.5,4.83-2.72,1.3-5.88,1.95-9.49,1.95-3.96,0-7.34-.75-10.14-2.25-2.8-1.5-4.64-3.41-5.5-5.73-.87-2.32-1.3-5.61-1.3-9.88v-3.73H14.2v6.93c0,2.13,.19,3.5,.58,4.11,.39,.61,1.07,.91,2.06,.91s1.72-.39,2.2-1.16c.48-.77,.72-1.92,.72-3.45,0-3.35-.46-5.54-1.37-6.57-.94-1.03-3.25-2.75-6.93-5.17-3.68-2.44-6.12-4.21-7.31-5.31-1.2-1.1-2.19-2.62-2.97-4.57-.79-1.95-1.18-4.43-1.18-7.45,0-4.36,.56-7.55,1.67-9.56,1.11-2.02,2.91-3.59,5.4-4.73,2.48-1.14,5.48-1.71,9-1.71,3.84,0,7.12,.62,9.83,1.86,2.71,1.24,4.5,2.81,5.38,4.69,.88,1.89,1.32,5.09,1.32,9.62v2.25Z"/>
          <path class="service-path" d="M70.21,35.61h-18.39v10.09c0,2.11,.15,3.47,.46,4.08,.3,.61,.89,.91,1.76,.91,1.08,0,1.8-.4,2.16-1.21,.36-.81,.54-2.37,.54-4.69v-6.15h13.46v3.45c0,2.88-.18,5.1-.54,6.64-.36,1.55-1.21,3.2-2.55,4.96s-3.03,3.08-5.08,3.96c-2.05,.88-4.62,1.32-7.72,1.32s-5.65-.43-7.95-1.3c-2.3-.87-4.08-2.06-5.36-3.57-1.28-1.51-2.16-3.18-2.65-4.99-.49-1.82-.74-4.46-.74-7.93v-13.61c0-4.08,.55-7.29,1.65-9.65,1.1-2.36,2.91-4.16,5.41-5.41,2.51-1.25,5.39-1.88,8.65-1.88,3.98,0,7.27,.76,9.86,2.27,2.59,1.51,4.41,3.52,5.45,6.01,1.04,2.5,1.56,6.01,1.56,10.53v6.19Zm-14.24-7.59v-3.41c0-2.41-.13-3.97-.39-4.68-.26-.7-.79-1.05-1.58-1.05-.98,0-1.59,.3-1.83,.9-.23,.6-.35,2.21-.35,4.83v3.41h4.15Z"/>
          <path class="service-path" d="M89.05,11.46l-.56,6.13c2.06-4.39,5.05-6.72,8.96-6.98V27.04c-2.6,0-4.51,.35-5.73,1.05-1.22,.7-1.97,1.68-2.25,2.94-.28,1.25-.42,4.14-.42,8.67v18.42h-14.2V11.46h14.2Z"/>
          <path class="service-path" d="M130.01,11.46l-6.64,46.65h-18.56l-7.14-46.65h12.68l4,34.07c.31-2.51,.85-8.61,1.6-18.31,.4-5.42,.86-10.67,1.38-15.76h12.68Z"/>
          <path class="service-path" d="M146.71,1.2v7.42h-14.62V1.2h14.62Zm0,10.27V58.11h-14.62V11.46h14.62Z"/>
          <path class="service-path" d="M183.2,29.07h-13.39v-5.38c0-1.88-.15-3.15-.46-3.81-.3-.67-.87-1-1.69-1s-1.37,.29-1.65,.88c-.28,.59-.42,1.9-.42,3.94v22.01c0,1.66,.21,2.91,.63,3.74,.42,.83,1.04,1.25,1.86,1.25,.96,0,1.61-.43,1.95-1.3,.34-.87,.51-2.51,.51-4.92v-5.55h12.66c-.02,3.73-.16,6.52-.4,8.38s-1.03,3.77-2.36,5.73c-1.32,1.96-3.05,3.43-5.19,4.43-2.13,1-4.77,1.49-7.91,1.49-4.01,0-7.18-.69-9.53-2.06-2.34-1.37-4-3.29-4.97-5.77-.97-2.47-1.46-5.98-1.46-10.53v-13.25c0-3.96,.4-6.95,1.2-8.96,.8-2.02,2.5-3.81,5.1-5.4s5.77-2.37,9.49-2.37,6.87,.79,9.49,2.36c2.62,1.57,4.37,3.55,5.24,5.94,.87,2.39,1.3,5.78,1.3,10.16Z"/>
          <path class="service-path" d="M219.59,35.61h-18.39v10.09c0,2.11,.15,3.47,.46,4.08,.3,.61,.89,.91,1.76,.91,1.08,0,1.8-.4,2.16-1.21s.54-2.37,.54-4.69v-6.15h13.46v3.45c0,2.88-.18,5.1-.54,6.64s-1.21,3.2-2.55,4.96-3.03,3.08-5.08,3.96-4.62,1.32-7.72,1.32-5.65-.43-7.95-1.3-4.08-2.06-5.36-3.57-2.16-3.18-2.65-4.99c-.49-1.82-.74-4.46-.74-7.93v-13.61c0-4.08,.55-7.29,1.65-9.65,1.1-2.36,2.91-4.16,5.41-5.41,2.51-1.25,5.39-1.88,8.65-1.88,3.98,0,7.27,.76,9.86,2.27s4.41,3.52,5.45,6.01,1.56,6.01,1.56,10.53v6.19Zm-14.24-7.59v-3.41c0-2.41-.13-3.97-.39-4.68s-.79-1.05-1.58-1.05c-.98,0-1.59,.3-1.83,.9s-.35,2.21-.35,4.83v3.41h4.15Z"/>
        </svg>
      </span>
    </div>

    <div class="service__content">
      <div class="service__circles">
        <div class="circle" data-index="0">
          <span>ホームページ制作</span>
        </div>
        <div class="circle" data-index="1">
          <span>レスポンシブ<br>デザイン</span>
        </div>
        <div class="circle" data-index="2">
          <span>CMS構築 / 導入</span>
        </div>
      </div>
      
      <div class="service__descriptions">
        <div class="description" data-index="0">
          <h3>あなたのお店や会社の魅力を伝える、<br>見やすいホームページをお作りします。</h3>
          <p>特別な知識がなくても安心して管理できるよう、使いやすさを重視しています。</p>
        </div>
        <div class="description" data-index="1">
          <h3>レスポンシブデザイン</h3>
          <p>スマホでもパソコンでも、どこでも見やすいデザインに対応。</p>
        </div>
        <div class="description" data-index="2">
          <h3>自分で簡単に更新できる<br>ホームページを提供します。</h3>
          <p>WordPressなどの仕組みを導入し、更新の手間を減らして、いつでも最新情報を発信できます。</p>
        </div>
      </div>
    </div>
  </div>
</div>


<style lang="scss">
  @import '../styles/vars.scss';

  .service {
    width: 100%;
    position: relative;

    &__inner {
      position: relative;
      
    }

    &__text {
      width: 100%;
      cursor: pointer;
      margin-bottom: vw-pc(50);
      position: relative;
      z-index: 3;

      .layer-open {
        display: inline-block;
        width: 100%;
      }

      svg {
        height: vw-pc(200);
        width: auto;

        @include max-screen($bp-sp) {
          height: 8rem;
        }

        path {
          opacity: 0;
          transition: fill 0.5s ease;
        }

      }
    }

    &__heading {
      font-family: "Barlow", sans-serif;
      font-weight: 700;
      font-size: vw-pc(40);
      margin-bottom: vw-pc(80);

      @include max-screen($bp-sp) {
        font-size: 1.4rem;
        margin-bottom: 3rem;
      }
    }

    &__content {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: vw-pc(50);
      min-height: 100vh;
      opacity: 0;  // 初期状態は非表示
      visibility: hidden;
      transition: opacity 0.5s;

      &.visible {
        opacity: 1;
        visibility: visible;
      }
    }

    &__circles {
      position: relative;
      height: vw-pc(350); 
      width: vw-pc(350); 
      margin: 0 auto;
      transform-origin: center center;
      left: 10%;    
      top: vw-pc(200); 
    }

    .circle {
        position: absolute;
        width: vw-pc(360);
        height: vw-pc(360);
        border-radius: 50%;
        background-color: #FFDEE9;
        background-image: linear-gradient(45deg, #FFDEE9 0%, #B5FFFC 100%);
        font-size: vw-pc(35);
        display: flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        text-align: center;
        font-weight: bold;
        opacity: 0.7;
        transition: opacity 0.3s;
        transform-origin: center center;
        left: calc(50% - vw-pc(180));  
        top: calc(50% - vw-pc(180)); 
        margin: 0;
        will-change: transform; // パフォーマンス最適化

        &.active {
            opacity: 1;
            // scaleを個別のGSAPアニメーションで制御するため、ここでは除外
            box-shadow: 0 0 30px rgba(39, 211, 255, 0.4);
            z-index: 2;
            transform: scale(1.8);
            
        }

        &:not(.active) {
            opacity: 0.5;
            filter: grayscale(30%);
        }

        &:nth-of-type(2) {
          background-color: #85FFBD;
          background-image: linear-gradient(45deg, #85FFBD 0%, #FFFB7D 100%);

        }

        &:nth-of-type(3) {
          background-color: #8EC5FC;
          background-image: linear-gradient(62deg, #8EC5FC 0%, #E0C3FC 100%);

        }
    }

    &__descriptions {
      padding: vw-pc(50) 0;
      position: relative;

      .description {
        position: absolute;
        top: vw-pc(50);  // 追加
        left: 0;         // 追加
        width: 100%;  
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.5s;

        &.active {
          opacity: 1;
          transform: translateY(0);
          transition-delay: 0.2s; 
        }

        h3 {
          font-size: vw-pc(30);
          margin-bottom: vw-pc(20);
        }

        p {
          font-size: vw-pc(20);
          line-height: 1.8;
        }
      }
    }
  }

  .service-open {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
    width: vw-pc(100);
    height: vw-pc(100);
    background: #27d3ff;
    border-radius: 50%;
    overflow: hidden;
    cursor: pointer;

    @include max-screen($bp-sp) {
      width: 7rem;
      height: 7rem;
    }

    &::after {
      content: "";
      width: 100%;
      height: 100%;
      background: #fff;
      position: absolute;
      top: 0;
      right: 0;
      z-index: 2;
      transition: 0.5s;
    }

    svg {
      width: vw-pc(20);
      position: relative;
      z-index: 3;

      @include max-screen($bp-sp) {
        width: 2rem;
      }
    }

    &.hover {
      &::after {
        width: 0;
      }
    }
    
  }

  .service-path {
    fill: #000; 
    transition: fill 0.5s ease;
  }
  
</style>

<script>
  import {
		ScrollTrigger
	} from "gsap/ScrollTrigger";
  import gsap from "../scripts/gsap";

  function initServiceAnimations() {
    gsap.registerPlugin(ScrollTrigger);
    
    // 定数の定義
    const CONFIG = {
        radius: vwToPx(13),
        centerX: window.innerWidth / 3,
        centerY: vwToPx(20),
        startAngle: (-130 * Math.PI / 180),
        activeScale: 1,
        inactiveScale: 0.6,
        rotationDuration: 1.6
    };
    
    // DOM要素の取得
    const elements = {
        circles: document.querySelectorAll('.circle'),
        descriptions: document.querySelectorAll('.description'),
        paths: document.querySelectorAll('.service-path')
    };
    
    let currentIndex = 0;

    // アニメーション関連の関数
    const animations = {
        positionCircles() {
            elements.circles.forEach((circle, i) => {
                const angle = CONFIG.startAngle + (i * (2 * Math.PI / 3));
                gsap.set(circle, {
                    x: CONFIG.radius * Math.cos(angle),
                    y: CONFIG.radius * Math.sin(angle),
                    rotation: 0,
                    scale: i === 0 ? CONFIG.activeScale : CONFIG.inactiveScale
                });
            });
            gsap.set(elements.circles[0], { scale: CONFIG.activeScale });
        },

        animateServiceText() {
            elements.paths.forEach((path, index) => {
                gsap.fromTo(path,
                    { opacity: 0, y: 50, x: 20 },
                    {
                        opacity: 1,
                        y: 0,
                        x: 0,
                        duration: 0.5,
                        delay: index * 0.1,
                        ease: "power2.out"
                    }
                );
            });
        },

        rotateCircles(newIndex) {
            const rotationAmount = -120 * newIndex;

            // 親要素の回転とスケールアニメーション
            gsap.to('.service__circles', {
                rotation: rotationAmount,
                duration: CONFIG.rotationDuration,
                ease: "power2.out",
                keyframes: [
                    { scale: 1 },
                    { scale: 2.4, duration: 0.9 },
                    { scale: 1, duration: 0.7 }
                ]
            });

            // 個々のサークルのアニメーション
            elements.circles.forEach((circle, i) => {
                gsap.to(circle, {
                    rotation: -rotationAmount,
                    scale: i === newIndex ? CONFIG.activeScale : CONFIG.inactiveScale,
                    duration: CONFIG.rotationDuration,
                    ease: "power2.out"
                });
            });

            // アクティブ状態の更新
            this.updateActiveStates(newIndex);
        },

        updateActiveStates(newIndex) {
            elements.descriptions.forEach((desc, i) => {
                desc.classList.toggle('active', i === newIndex);
            });
            elements.circles.forEach((circle, i) => {
                circle.classList.toggle('active', i === newIndex);
            });
            currentIndex = newIndex;
        }
    };

    // ScrollTriggerの設定
    const initScrollTriggers = () => {
        // SVGパスアニメーション用
        ScrollTrigger.create({
            trigger: ".service__text",
            start: "top 70%",
            once: true,
            onEnter: () => animations.animateServiceText()
        });

        // メインのスクロールアニメーション
        ScrollTrigger.create({
            trigger: "#service",
            start: "top top",
            end: "+=200%",
            pin: true,
            scrub: 0.5,
            onEnter: () => {
                gsap.to('.service__content', {
                    opacity: 1,
                    visibility: 'visible',
                    duration: 0.5,
                    delay: 0.5
                });
            },
            onUpdate: (self) => {
                const newIndex = Math.floor(self.progress * 3);
                if (newIndex !== currentIndex && newIndex < 3) {
                    animations.rotateCircles(newIndex);
                }
            }
        });
    };

    // 初期化
    animations.positionCircles();
    animations.updateActiveStates(0);
    initScrollTriggers();

    // リサイズ対応
    window.addEventListener('resize', () => {
        CONFIG.centerX = window.innerWidth / 3;
        animations.positionCircles();
    });
}

// vwをピクセルに変換するユーティリティ関数
function vwToPx(vw) {
    return (vw * window.innerWidth) / 100;
}

// 初期化
window.addEventListener('load', initServiceAnimations);
</script>