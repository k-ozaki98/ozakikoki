<div class="flow-text">
    <div class="flow-text__item js-tick-item">THANKS FOR VISITING</div>
    <div class="flow-text__item js-tick-item">THANKS FOR VISITING</div>
</div>

<style lang="scss">
    @import "../styles/vars.scss";
    @import "../styles/common.scss";

    .flow-text {
        transform: translateY(-81%);
        position: absolute;
        top: 0;
        left: 0;
        overflow: hidden;
        display: flex;
        width: 100vw;
        margin-inline: calc(50% - 50vw);
        color: #1d232a;
        font-family: "Cormorant Garamond", serif;

        @include max-screen($bp-sp) {
            transform: translateY(-80%);
        }

        &__item {
            flex-shrink: 0;
            white-space: nowrap;
            font-size: 15rem;
            line-height: 1;
            padding-right: 5rem;

            @include max-screen($bp-sp) {
                font-size: 5rem;
                padding-right: 2.5rem;
            }

            &:nth-child(odd) {
                animation: MoveLeft var(--tick-duration, 50s) var(--tick-delay, -25s) infinite linear;
            }

            &:nth-child(even) {
                animation: MoveLeft2 var(--tick-duration, 50s) infinite linear;
            }
        }
    }

    @keyframes MoveLeft {
        from {
            transform: translateX(100%);
        }
        to {
            transform: translateX(-100%);
        }
    }

    @keyframes MoveLeft2 {
        from {
            transform: translateX(0);
        }
        to {
            transform: translateX(-200%);
        }
    }

    #debug {
        position: fixed;
        top: 10px;
        left: 10px;
        background: rgba(0,0,0,0.7);
        color: white;
        padding: 10px;
        font-family: monospace;
    }

</style>

<script>
    const NORMAL_SPEED_FACTOR = 1;
    const SCROLL_SPEED_FACTOR = 0.5;
    let isScrolling = false;
    let scrollTimeout;

    function calculateLoopAnimationSpeed(speedFactor = NORMAL_SPEED_FACTOR) {
        const targets = document.querySelectorAll('.js-tick');
        if (!targets.length) {
            return;
        }

        const distance = window.innerWidth;
        const mql = window.matchMedia('(min-width: 801px)');
        const time = (mql.matches ? 50 : 25) * speedFactor;
        const speed = distance / time;

        targets.forEach((target) => {
            const tickElems = target.querySelectorAll('.js-tick-item');
            if (!tickElems.length) {
                return;
            }

            tickElems.forEach((el) => {
                const elWidth = el.clientWidth;
                const elTime = Math.floor(elWidth / speed);
                console.log('Element width:', elWidth, 'Animation time:', elTime); // デバッグ用
                el.style.setProperty('--tick-duration', `${elTime}s`);
                el.style.setProperty('--tick-delay', `${elTime / -2}s`); 
            })
        })
    }

    function resizeRefresh() {
        calculateLoopAnimationSpeed();
    }

    function copyText() {
        const targets = document.querySelectorAll('.js-tick');
        if (!targets.length) {
            return;
        }

        targets.forEach((target) => {
            const tickElems = target.querySelectorAll('.js-tick-item');
            if (!tickElems.length) {
                return;
            }

            let length = 0;
            tickElems.forEach((el) => {
                length += el.clientWidth;
                el.insertAdjacentHTML('afterend', el.outerHTML);
                if (length > window.innerWidth * 2) return;
            })
        })

    }

    function handleScroll() {
        if (!isScrolling) {
            isScrolling = true;
            calculateLoopAnimationSpeed(SCROLL_SPEED_FACTOR);
        }

        clearTimeout(scrollTimeout);
        scrollTimeout = setTimeout(() => {
            isScrolling = false;
            calculateLoopAnimationSpeed(NORMAL_SPEED_FACTOR);
        }, 150);
    }

    copyText();
    calculateLoopAnimationSpeed();
    window.addEventListener('resize', resizeRefresh);
    window.addEventListener('scroll', handleScroll);

</script>