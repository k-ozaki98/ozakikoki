<div id="service" class="service sec-inner" data-bg="#E1E1E1">
  <div class="l-inner service__inner">
    <div class="service__text">
      <span class="layer-open service-trigger">
        <svg id="service" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 251.41 60.81">
          <path class="service-path" d="M9.02,18.39c1.19,1.81,2.63,3.33,4.32,4.55,1.69,1.22,4.07,2.77,7.13,4.65,3.25,1.94,5.79,3.57,7.6,4.88,1.81,1.31,3.36,2.99,4.65,5.02,1.28,2.03,1.92,4.46,1.92,7.27,0,3-.75,5.72-2.25,8.16s-3.71,4.36-6.62,5.77-6.4,2.11-10.46,2.11c-4.82,0-9.23-1.1-13.23-3.28-.31-.19-.52-.41-.61-.66-.09-.25-.17-.62-.23-1.13L.01,42.98c-.06-.25,.08-.41,.42-.47,.34-.06,.55,.03,.61,.28,.94,4.44,2.78,8.3,5.54,11.59,2.75,3.28,6.38,4.93,10.89,4.93,3.13,0,5.77-.86,7.93-2.58,2.16-1.72,3.24-4.46,3.24-8.21,0-2.82-.63-5.26-1.88-7.32-1.25-2.06-2.77-3.77-4.55-5.11-1.78-1.34-4.21-2.92-7.27-4.74-3-1.81-5.36-3.38-7.08-4.69-1.72-1.31-3.18-2.97-4.36-4.97-1.19-2-1.78-4.35-1.78-7.04,0-3.13,.83-5.8,2.49-8.02,1.66-2.22,3.81-3.88,6.48-4.97,2.66-1.09,5.49-1.64,8.49-1.64,3.69,0,7.35,.75,10.98,2.25,.94,.31,1.41,.84,1.41,1.6l.66,10.7c0,.31-.17,.47-.52,.47s-.55-.12-.61-.38c-.44-3.25-1.75-6.27-3.94-9.06-2.19-2.78-5.35-4.18-9.48-4.18-3.5,0-6.12,1.02-7.84,3.05-1.72,2.03-2.58,4.55-2.58,7.55,0,2.44,.59,4.57,1.78,6.38Z"/>
          <path class="service-path" d="M50.97,58.28c-2.57-1.69-4.52-3.91-5.87-6.66-1.35-2.75-2.02-5.69-2.02-8.82,0-3.69,.88-7.09,2.63-10.18,1.75-3.1,4.14-5.54,7.18-7.32,3.03-1.78,6.37-2.67,9.99-2.67s6.19,.94,8.07,2.82,2.82,4.5,2.82,7.88c0,.88-.08,1.5-.23,1.88-.16,.38-.45,.56-.89,.56h-5.25l.09-1.69c0-3.13-.69-5.5-2.06-7.13-1.38-1.63-3.25-2.44-5.63-2.44-3.32,0-5.9,1.31-7.74,3.94-1.85,2.63-2.77,6.23-2.77,10.79,0,5.44,1.28,9.85,3.85,13.23,2.56,3.38,6.16,5.07,10.79,5.07,1.88,0,3.49-.25,4.83-.75,1.34-.5,2.86-1.28,4.55-2.35h.09c.19,0,.36,.11,.52,.33,.16,.22,.17,.42,.05,.61-4.26,3.63-8.82,5.44-13.7,5.44-3.63,0-6.73-.84-9.29-2.53Zm-3.47-23.65l21.3-.38v1.5l-21.21,.09-.09-1.22Z"/>
          <path class="service-path" d="M81.94,59.12c0-.38,.09-.56,.28-.56,1.69,0,2.94-.17,3.75-.52,.81-.34,1.36-.95,1.64-1.83,.28-.88,.42-2.25,.42-4.13v-18.58c0-2.13-.25-3.66-.75-4.6-.5-.94-1.35-1.41-2.53-1.41-1,0-2.69,.47-5.07,1.41h-.19c-.25,0-.42-.14-.52-.42-.09-.28-.02-.48,.23-.61l10.89-5.16c.12-.06,.31-.09,.56-.09,.56,0,1.16,.72,1.78,2.16,.62,1.44,.94,3.28,.94,5.54v21.77c0,1.88,.23,3.25,.7,4.13,.47,.88,1.33,1.49,2.58,1.83,1.25,.34,3.19,.52,5.82,.52,.25,0,.38,.19,.38,.56s-.13,.56-.38,.56c-2,0-3.6-.03-4.79-.09l-6.94-.09-5.16,.09c-.81,.06-1.94,.09-3.38,.09-.19,0-.28-.19-.28-.56Zm16.8-34.3c1.81-1.47,3.5-2.21,5.07-2.21,1.38,0,2.69,.38,3.94,1.13,1.25,.75,1.88,1.66,1.88,2.72,0,.81-.28,1.5-.84,2.06-.56,.56-1.31,.84-2.25,.84-.56,0-1.05-.11-1.45-.33-.41-.22-.89-.55-1.45-.99-.56-.5-1.1-.88-1.6-1.13-.5-.25-1.1-.38-1.78-.38-.94,0-1.97,.47-3.1,1.41s-3.04,3.04-5.72,6.29l-.38-1.03c3.31-4.13,5.88-6.93,7.69-8.4Z"/>
          <path class="service-path" d="M152.79,24.02c0,.38-.06,.56-.19,.56-1.63,0-2.99,.5-4.08,1.5-1.1,1-2.14,2.78-3.14,5.35l-11.73,28.15c-.13,.31-.47,.47-1.03,.47s-.91-.16-1.03-.47l-13.14-28.34c-1.25-2.69-2.3-4.47-3.14-5.35-.84-.88-1.89-1.31-3.14-1.31-.19,0-.28-.19-.28-.56s.09-.56,.28-.56c1.25,0,2.22,.03,2.91,.09l3.57,.09,6.1-.09c.94-.06,2.19-.09,3.75-.09,.19,0,.28,.19,.28,.56s-.09,.56-.28,.56c-3.75,0-5.63,.75-5.63,2.25,0,.44,.12,.91,.38,1.41l12.01,25.53-2.72,3.85,10.98-26.65c.44-1.19,.66-2.1,.66-2.72,0-1.25-.6-2.17-1.78-2.77-1.19-.59-3.07-.89-5.63-.89-.13,0-.19-.19-.19-.56s.06-.56,.19-.56c1.69,0,2.97,.03,3.85,.09l5.63,.09,3.28-.09c.62-.06,1.66-.09,3.1-.09,.12,0,.19,.19,.19,.56Z"/>
          <path class="service-path" d="M157.67,59.12c0-.38,.06-.56,.19-.56,1.69,0,2.96-.17,3.8-.52,.84-.34,1.42-.95,1.74-1.83,.31-.88,.47-2.25,.47-4.13v-17.55c0-2.25-.23-3.88-.7-4.88-.47-1-1.27-1.5-2.39-1.5s-2.53,.44-4.22,1.31h-.09c-.25,0-.44-.16-.56-.47-.13-.31-.09-.53,.09-.66l12.2-5.63,.38-.09c.12,0,.28,.08,.47,.23,.19,.16,.28,.33,.28,.52,0,.44-.03,1.69-.09,3.75-.06,2.06-.09,4.5-.09,7.32v17.64c0,1.88,.16,3.25,.47,4.13,.31,.88,.88,1.49,1.69,1.83,.81,.34,2.06,.52,3.75,.52,.19,0,.28,.19,.28,.56s-.09,.56-.28,.56c-1.44,0-2.6-.03-3.47-.09l-5.07-.09-5.07,.09c-.88,.06-2.06,.09-3.57,.09-.13,0-.19-.19-.19-.56Zm5.07-48.52c-.75-.69-1.13-1.66-1.13-2.91s.38-2.22,1.13-2.91c.75-.69,1.75-1.03,3-1.03s2.22,.34,2.91,1.03c.69,.69,1.03,1.66,1.03,2.91s-.34,2.22-1.03,2.91-1.66,1.03-2.91,1.03-2.25-.34-3-1.03Z"/>
          <path class="service-path" d="M189.95,58.14c-2.75-1.78-4.79-4.08-6.1-6.9s-1.97-5.79-1.97-8.92c0-4,1-7.49,3-10.46,2-2.97,4.58-5.26,7.74-6.85,3.16-1.6,6.4-2.39,9.71-2.39,2.75,0,5.27,.55,7.55,1.64,2.28,1.1,3.43,2.46,3.43,4.08,0,.81-.3,1.52-.89,2.11s-1.39,.89-2.39,.89c-1.69,0-3.07-1.03-4.13-3.1-.81-1.25-1.69-2.19-2.63-2.82-.94-.62-2.28-.94-4.04-.94-3.5,0-6.24,1.36-8.21,4.08-1.97,2.72-2.96,6.37-2.96,10.93,0,5.26,1.31,9.57,3.94,12.95,2.63,3.38,6.57,5.07,11.82,5.07,3.81,0,7.01-1.03,9.57-3.1h.09c.19,0,.36,.09,.52,.28,.15,.19,.17,.34,.05,.47-2.19,1.94-4.4,3.36-6.62,4.27-2.22,.91-4.65,1.36-7.27,1.36-4.07,0-7.48-.89-10.23-2.67Z"/>
          <path class="service-path" d="M228.33,58.28c-2.57-1.69-4.52-3.91-5.86-6.66-1.35-2.75-2.02-5.69-2.02-8.82,0-3.69,.88-7.09,2.63-10.18,1.75-3.1,4.14-5.54,7.18-7.32,3.03-1.78,6.37-2.67,10-2.67s6.19,.94,8.07,2.82,2.82,4.5,2.82,7.88c0,.88-.08,1.5-.23,1.88-.16,.38-.46,.56-.89,.56h-5.26l.09-1.69c0-3.13-.69-5.5-2.06-7.13-1.38-1.63-3.25-2.44-5.63-2.44-3.32,0-5.9,1.31-7.74,3.94-1.85,2.63-2.77,6.23-2.77,10.79,0,5.44,1.28,9.85,3.85,13.23,2.56,3.38,6.16,5.07,10.79,5.07,1.88,0,3.49-.25,4.83-.75,1.34-.5,2.86-1.28,4.55-2.35h.09c.19,0,.36,.11,.52,.33,.16,.22,.17,.42,.05,.61-4.25,3.63-8.82,5.44-13.7,5.44-3.63,0-6.73-.84-9.29-2.53Zm-3.47-23.65l21.3-.38v1.5l-21.21,.09-.09-1.22Z"/>
        </svg>
      </span>
    </div>

    <div class="service__content">
      <div class="service__circles">
        <div class="circle" data-index="0">
          <span>ホームページ制作</span>
        </div>
        <div class="circle" data-index="1">
          <span>レスポンシブ<br>デザイン</span>
        </div>
        <div class="circle" data-index="2">
          <span>CMS構築 / 導入</span>
        </div>
      </div>
      
      <div class="service__descriptions">
        <div class="description" data-index="0">
          <h3>あなたのお店や会社の魅力を伝える、<br>見やすいホームページをお作りします。</h3>
          <p>特別な知識がなくても安心して管理できるよう、使いやすさを重視しています。</p>
        </div>
        <div class="description" data-index="1">
          <h3>レスポンシブデザイン</h3>
          <p>スマホでもパソコンでも、どこでも見やすいデザインに対応。</p>
        </div>
        <div class="description" data-index="2">
          <h3>自分で簡単に更新できる<br>ホームページを提供します。</h3>
          <p>WordPressなどの仕組みを導入し、更新の手間を減らして、いつでも最新情報を発信できます。</p>
        </div>
      </div>
    </div>
  </div>
</div>


<style lang="scss">
  @import '../styles/vars.scss';

  .service {
    width: 100%;
    position: relative;

    @include max-screen($bp-sp) {
      margin-bottom: 5rem;
    }

    &__inner {
      position: relative;
      
    }

    &__text {
      width: 100%;
      cursor: pointer;
      margin-bottom: vw-pc(50);
      position: relative;
      z-index: 3;

      @include max-screen($bp-sp) {
        margin-bottom: 2rem;
      }

      .layer-open {
        display: inline-block;
        width: 100%;
      }

      svg {
        height: vw-pc(200);
        width: auto;

        @include max-screen($bp-sp) {
          height: 7rem;
        }

        path {
          opacity: 0;
          transition: fill 0.5s ease;
        }

      }
    }

    &__heading {
      font-family: "Barlow", sans-serif;
      font-weight: 700;
      font-size: vw-pc(40);
      margin-bottom: vw-pc(80);

      @include max-screen($bp-sp) {
        font-size: 1.4rem;
        margin-bottom: 3rem;
      }
    }

    &__content {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: vw-pc(50);
      min-height: 100vh;
      opacity: 0;  // 初期状態は非表示
      visibility: hidden;
      transition: opacity 0.5s;

      @include max-screen($bp-sp) {
        grid-template-columns: 1fr;
        gap: 2rem;
        min-height: auto;
        padding: 0 1rem;
      }

      &.visible {
        opacity: 1;
        visibility: visible;
      }
    }

    &__circles {
      position: relative;
      height: vw-pc(350); 
      width: vw-pc(350); 
      margin: 0 auto;
      transform-origin: center center;
      left: 10%;    
      top: vw-pc(250); 

      @include max-screen($bp-sp) {
        height: 16rem;
        width: 16rem;
        left: 0;
        top: 10rem;
      }
    }

    .circle {
        position: absolute;
        width: vw-pc(360);
        height: vw-pc(360);
        border-radius: 50%;
        background-color: #FFDEE9;
        background-image: linear-gradient(45deg, #FFDEE9 0%, #B5FFFC 100%);
        font-size: vw-pc(35);
        display: flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        text-align: center;
        font-weight: bold;
        opacity: 0.7;
        transition: opacity 0.3s;
        transform-origin: center center;
        left: calc(50% - vw-pc(180));  
        top: calc(50% - vw-pc(180)); 
        margin: 0;
        will-change: transform; // パフォーマンス最適化

        @include max-screen($bp-sp) {
          width: 18rem;
          height: 18rem;
          font-size: 1rem;
          left: calc(50% - 9rem); // 中央からの距離
          top: calc(50% - 9rem);
        }

        &.active {
            opacity: 1;
            // scaleを個別のGSAPアニメーションで制御するため、ここでは除外
            box-shadow: 0 0 30px rgba(39, 211, 255, 0.4);
            z-index: 2;
            transform: scale(1.8);

            @include max-screen($bp-sp) {
              transform: scale(1.1);
            }
            
        }

        &:not(.active) {
            opacity: 0.5;
            filter: grayscale(30%);
        }

        &:nth-of-type(2) {
          background-color: #85FFBD;
          background-image: linear-gradient(45deg, #85FFBD 0%, #FFFB7D 100%);

        }

        &:nth-of-type(3) {
          background-color: #8EC5FC;
          background-image: linear-gradient(62deg, #8EC5FC 0%, #E0C3FC 100%);

        }
    }

    &__descriptions {
      padding: vw-pc(50) 0;
      position: relative;

      @include max-screen($bp-sp) {
        padding: 2rem 0;
        margin-top: 12rem;
      }

      .description {
        position: absolute;
        top: vw-pc(50);  // 追加
        left: 0;         // 追加
        width: 100%;  
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.5s;

        @include max-screen($bp-sp) {
          top: 0;
          margin-top: 1rem;
        }

        &.active {
          opacity: 1;
          transform: translateY(0);
          transition-delay: 0.2s; 
        }

        h3 {
          font-size: vw-pc(30);
          margin-bottom: vw-pc(20);

          @include max-screen($bp-sp) {
            font-size: 1.8rem;
            margin-bottom: 1rem;
          }
        }

        p {
          font-size: vw-pc(20);
          line-height: 1.8;

          @include max-screen($bp-sp) {
            font-size: 1.6rem;
          }
        }
      }
    }
  }

  .service-open {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
    width: vw-pc(100);
    height: vw-pc(100);
    background: #27d3ff;
    border-radius: 50%;
    overflow: hidden;
    cursor: pointer;

    @include max-screen($bp-sp) {
      width: 7rem;
      height: 7rem;
    }

    &::after {
      content: "";
      width: 100%;
      height: 100%;
      background: #fff;
      position: absolute;
      top: 0;
      right: 0;
      z-index: 2;
      transition: 0.5s;
    }

    svg {
      width: vw-pc(20);
      position: relative;
      z-index: 3;

      @include max-screen($bp-sp) {
        width: 2rem;
      }
    }

    &.hover {
      &::after {
        width: 0;
      }
    }
    
  }

  .service-path {
    fill: #000; 
    transition: fill 0.5s ease;
  }
  
</style>

<script>
  import {
    ScrollTrigger
  } from "gsap/ScrollTrigger";
  import gsap from "../scripts/gsap";

  function initServiceAnimations() {
    gsap.registerPlugin(ScrollTrigger);
    
    // 設定を動的に計算する関数
    const getConfig = () => ({
      radius: window.innerWidth <= 768 ? 100 : vwToPx(13),
      centerX: window.innerWidth <= 768 ? window.innerWidth / 2 : window.innerWidth / 3,
      centerY: window.innerWidth <= 768 ? 200 : vwToPx(20),
      startAngle: (-130 * Math.PI / 180),
      activeScale: 1,
      inactiveScale: window.innerWidth <= 768 ? 0.5 : 0.6,
      rotationDuration: window.innerWidth <= 768 ? 1.2 : 1.6
    });

    // 現在の設定を保持
    let CONFIG = getConfig();
    
    // DOM要素の取得
    const elements = {
      circles: document.querySelectorAll('.circle'),
      descriptions: document.querySelectorAll('.description'),
      paths: document.querySelectorAll('.service-path')
    };
    
    let currentIndex = 0;
    let scrollTriggers = [];

    // アニメーション関連の関数
    const animations = {
      positionCircles() {
        elements.circles.forEach((circle, i) => {
          const angle = CONFIG.startAngle + (i * (2 * Math.PI / 3));
          gsap.set(circle, {
            x: CONFIG.radius * Math.cos(angle),
            y: CONFIG.radius * Math.sin(angle),
            rotation: 0,
            scale: i === currentIndex ? CONFIG.activeScale : CONFIG.inactiveScale
          });
        });
      },

      animateServiceText() {
        elements.paths.forEach((path, index) => {
          gsap.fromTo(path,
            { opacity: 0, y: 50, x: 20 },
            {
              opacity: 1,
              y: 0,
              x: 0,
              duration: 0.5,
              delay: index * 0.1,
              ease: "power2.out"
            }
          );
        });
      },

      rotateCircles(newIndex) {
        const rotationAmount = -120 * newIndex;

        // 親要素の回転とスケールアニメーション
        gsap.to('.service__circles', {
          rotation: rotationAmount,
          duration: CONFIG.rotationDuration,
          ease: "power2.out",
          keyframes: [
            { scale: 1 },
            { scale: 2.4, duration: 0.9 },
            { scale: 1, duration: 0.7 }
          ]
        });

        // 個々のサークルのアニメーション
        elements.circles.forEach((circle, i) => {
          gsap.to(circle, {
            rotation: -rotationAmount,
            scale: i === newIndex ? CONFIG.activeScale : CONFIG.inactiveScale,
            duration: CONFIG.rotationDuration,
            ease: "power2.out"
          });
        });

        this.updateActiveStates(newIndex);
      },

      updateActiveStates(newIndex) {
        elements.descriptions.forEach((desc, i) => {
          desc.classList.toggle('active', i === newIndex);
        });
        elements.circles.forEach((circle, i) => {
          circle.classList.toggle('active', i === newIndex);
        });
        currentIndex = newIndex;
      }
    };

    // ScrollTriggerの設定と管理
    const initScrollTriggers = () => {
      // 既存のトリガーをクリーンアップ
      scrollTriggers.forEach(trigger => trigger.kill());
      scrollTriggers = [];

      // SVGパスアニメーション用
      scrollTriggers.push(
        ScrollTrigger.create({
          trigger: ".service__text",
          start: "top 70%",
          once: true,
          onEnter: () => animations.animateServiceText()
        })
      );

      // メインのスクロールアニメーション
      scrollTriggers.push(
        ScrollTrigger.create({
          trigger: "#service",
          start: "top top",
          end: "+=200%",
          pin: true,
          scrub: 0.5,
          onEnter: () => {
            gsap.to('.service__content', {
              opacity: 1,
              visibility: 'visible',
              duration: 0.5,
              delay: 0.5
            });
          },
          onUpdate: (self) => {
            const newIndex = Math.floor(self.progress * 3);
            if (newIndex !== currentIndex && newIndex < 3) {
              animations.rotateCircles(newIndex);
            }
          }
        })
      );
    };

    // リサイズハンドラー
    const handleResize = () => {
      // 設定の更新
      CONFIG = getConfig();
      // アニメーションの再配置
      animations.positionCircles();
      // ScrollTriggerの再初期化
      initScrollTriggers();
    };

    // デバウンス関数
    function debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }

    // 初期化
    animations.positionCircles();
    animations.updateActiveStates(0);
    initScrollTriggers();

    // リサイズイベントリスナーの設定（デバウンス処理付き）
    window.addEventListener('resize', debounce(handleResize, 250));
  }

  // vwをピクセルに変換するユーティリティ関数
  function vwToPx(vw) {
    return (vw * window.innerWidth) / 100;
  }

  // 初期化
  window.addEventListener('load', initServiceAnimations);
</script>