---
import Layout from '../../layouts/Layout.astro'
import { newtClient } from '../../lib/newt'
import type { Article } from '../../lib/newt'
import { formatToJapaneseDate } from '../../scripts/utility';
import PrevNextNavigation from '../../components/PrevNextNavigation.astro';
import PasswordProtectedContent from '../../components/Password';


export const getStaticPaths = async () => {
  const { items: articles } = await newtClient.getContents<Article>({
    appUid: 'blog',
    modelUid: 'article',
	query: {
		order: ['-_sys.createdAt'],
	},
  })

  const articlesIndex = articles.map((article, index) => ({
	...article,
	index,
  }))

  return articlesIndex.map((article) => ({
    params: { slug: article.slug },
    props: { article, allArticles: articlesIndex },
  }))
}

const { article, allArticles } = Astro.props

const currentIndex = article.index
const prevArticle = allArticles[currentIndex + 1] || null
const nextArticle = allArticles[currentIndex - 1] || null

const createDate = formatToJapaneseDate(article._sys.createdAt);
const updateDate = formatToJapaneseDate(article._sys.updatedAt);
const isUpdate =  article._sys.createdAt !== article._sys.updatedAt;

const hasPassword = article.password && article.password.trim() !== '';
---

<Layout pageId="column-single" title="記事詳細  | Ozaki's Portfolio" description="記事詳細ページです。">
	<main>


		<div class="l-section">
			<div class="xl-inner">

				<article class="article">
					<div class="article-inner">

						<ul class="article-nav">
							<li>
								<a href="/blog/">記事一覧</a>
							</li>
							<li>
								{article.title}
							</li>
						</ul>
	
						{article.category?.length > 0 && (
							<ul class="category">
								{article.category.map((cat, i) => (
									<li class="item">{cat.name}</li>
								))}
							</ul>
						) }
	
						<div class="article-header">
							<h1 class="ttl">
								{article.title}
							</h1>
		
							{article.coverImage?.src? (
								<div class="thumbnail">
									<img src={article.coverImage.src} alt="" />
								</div>
							) : null}
	
							<div class="date">
								{isUpdate && (
									<span class="update">
										<i class="bi bi-arrow-clockwise"></i> {updateDate}
									</span>
								)}
								<span class="create">
									<i class="bi bi-clock-fill"></i> {createDate}
								</span>
							</div>
	
							
						</div>
						<div class="article-content">
							{hasPassword ? (
								<PasswordProtectedContent client:load article={article} />
							) : (
								<section class="web-column-content">
								<div class="article-body" set:html={article.body} />
								</section>
							)}
						</div>
					</div>
				</article>

				<PrevNextNavigation prevArticle={prevArticle} nextArticle={nextArticle} />
	
			</div>
		</div>
	</main>
</Layout>

<style lang="scss">
	@import '../../styles/vars.scss';

	.article {
		margin: 4rem auto;
	}
	.article-inner {
		background: rgba(255,255,255, 1);
		border: 2px solid #000;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2), 0 6px 20px rgba(0, 0, 0, 0.19);
		padding: 4rem;
		position: relative;
		max-width: 110rem;
		margin: 0 auto;

		@include max-screen($bp-sp) {
			border: 1px solid #000;
			-moz-box-shadow: -5px 5px 0px 0px rgba(0, 0, 0, 1);
			-webkit-box-shadow: -5px 5px 0px 0px rgba(0, 0, 0, 1);
			-ms-box-shadow: -5px 5px 0px 0px rgba(0, 0, 0, 1);
			box-shadow: -5px 5px 0px 0px rgba(0, 0, 0, 1);
			padding: 4rem 2rem 2rem;
		}
	}

	.article-body {
		img {
			max-height: 40rem;
			margin: 1em 0;
		}
		}

  .article-nav {
    display: flex;
    align-items: center;
    margin-bottom: vw-pc(60);
    li {
      margin-right: vw-pc(40);
      position: relative;
      font-size: vw-pc(20);

			@include max-screen($bp-sp) {
				font-size: 1.2rem;
				margin-right: 2rem;
				min-width: 20%;
			}

      &::after {
        content: "";
        width: vw-pc(15);
        height: vw-pc(15);
        border-top: 3px solid #576ef0;
        border-right: 3px solid #576ef0;
        transform: translateY(-50%) rotate(45deg);
        position: absolute;
        top: 50%;
        right: vw-pc(-25);

				@include max-screen($bp-sp) {
					width: 1rem;
					height: 1rem;
				}
      }

      &:last-of-type {
        &::after {
          content: none;

        }
      }
    }
  }

	.article-header {
		margin-bottom: 4rem;

		@include max-screen($bp-sp) {
			margin-bottom: 2rem;
		}
	}

	.category {
		position: absolute;
		right: 0;
		top: 0;
		.item {
			background: linear-gradient(145deg, #ff9326 0%, #f7d227 100%);
			color: #fff;
			font-size: 1.8rem;
			padding: 0 1.5rem;
			display: inline-block;

			@include max-screen($bp-sp) {
				font-size: 1.4rem;
			}
		}
	}

	.ttl {
		font-size: 3.6rem;
		margin-bottom: 4rem;

		@include max-screen($bp-sp) {
			font-size: 2rem;
			margin-bottom: 2rem;
		}
	}

	.thumbnail {
		img {
			height: 55rem;
			object-fit: cover;
			width: 100%;

			@include max-screen($bp-sp) {
				height: 18rem;
			}
		}
	}

	.date {
		display: flex;
		justify-content: right;
		margin: 1rem 0;
		font-size: 1.4rem;

		@include max-screen($bp-sp) {
			font-size: 1.2rem;
		}

		> span {
			margin-left: 1rem;
		}
	}

	//ここから＝＝＝

	

//   ここまで＝＝＝＝＝＝＝＝＝＝＝

</style>

<style is:global lang="scss">
	@import '../../styles/vars.scss';
	.web-column-content {

		h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    line-height: 1.4;
    font-weight: bold;
  }

  h1 {
    font-size: 3.6rem;
    margin: 4rem 0 3rem;
    @include max-screen($bp-sp) {
      font-size: 2.4rem;
      margin: 3rem 0 2rem;
    }
  }

  h2 {
    font-size: 2.4rem;
    margin: 3.5rem 0 2.5rem;
    padding: 2rem;
    background-color: rgba(87, 110, 240, 0.1); // より薄い背景色
    border-left: 5px solid #576ef0;
    color: #333; // 濃い灰色のテキスト
    
    @include max-screen($bp-sp) {
      font-size: 1.8rem;
      padding: 1.5rem;
      margin: 2.5rem 0 2rem;
    }
  }

  h3 {
    font-size: 2.2rem;
    margin: 3rem 0 2rem;
    padding: 1.2rem 2rem;
    border-left: 7px solid #576ef0;
    border-right: 1px solid #ddd;
    border-top: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    background-color: #fafafa; // 微かな背景色
    
    @include max-screen($bp-sp) {
      font-size: 1.6rem;
      padding: .75rem 1rem;
      margin: 2rem 0 1.5rem;
      border-left-width: 4px;
    }
  }

  h4 {
    font-size: 2rem;
    margin: 2.5rem 0 1.5rem;
    padding: 1rem;
    border-top: 2px solid #576ef0;
    border-bottom: 2px solid #576ef0;
    
    @include max-screen($bp-sp) {
      font-size: 1.6rem;
      padding: .5rem;
      margin: 2rem 0 1.5rem;
      border-width: 1px;
    }
  }

  h5 {
    font-size: 1.8rem;
    margin: 2rem 0 1.5rem;
    padding: 1rem;
    border-bottom: 2px solid #ddd;
    
    @include max-screen($bp-sp) {
      font-size: 1.5rem;
      padding: .5rem;
      margin: 1.5rem 0 1rem;
      border-width: 1px;
    }
  }

  h6 {
    font-size: 1.6rem;
    margin: 1.5rem 0 1rem;
    padding: 1rem;
    border-bottom: 1px solid #ddd;
    
    @include max-screen($bp-sp) {
      font-size: 1.4rem;
      padding: .5rem;
      margin: 1rem 0 0.75rem;
    }
  }
	p {
    margin-bottom: 2rem;
    line-height: 1.9;
		
    color: #2c3e50;
    
    @include max-screen($bp-sp) {
      margin-bottom: 1.5rem;
    }
		
  }

  // リストのスタイリング改善
  ul, ol {
    margin: 2rem 0;
    padding-left: 2rem;
    
    @include max-screen($bp-sp) {
      margin: 1.5rem 0;
      padding-left: 1.5rem;
    }

    li {
      margin: 0.8em 0;
      line-height: 1.8;
      position: relative;
      color: #2c3e50;
    }
  }

  // 箇条書きリスト
  ul {
    li {
      list-style: none;
      padding-left: 1.5em;

      &::before {
        content: "";
        position: absolute;
        left: 0;
        top: 0.7em;
        width: 6px;
        height: 6px;
        background: #576ef0;
        border-radius: 50%;
      }
    }
  }

  // 番号付きリスト
  ol {
    counter-reset: item;
    
    li {
      list-style: none;
      padding-left: 2em;

      &::before {
        content: counter(item) ".";
        counter-increment: item;
        position: absolute;
        left: 0;
        color: #576ef0;
        font-weight: bold;
      }
    }
  }

  // ブロッククォート
  blockquote {
    margin: 2.5rem 0;
    padding: 1.5rem 2rem 1.5rem 3.5rem;
    background: #f8f9fa;
    border-left: 5px solid #576ef0;
    position: relative;
    border-radius: 4px;

    &::before {
      content: "";
      position: absolute;
      left: 1rem;
      top: 0.5rem;
      font-size: 4rem;
      color: #576ef0;
      opacity: 0.3;
      font-family: serif;
    }

    p {
      margin: 0.5rem 0;
      color: #495057;
      font-style: italic;
    }

    cite {
      display: block;
      margin-top: 1rem;
      font-size: 0.9em;
      color: #6c757d;
      font-style: normal;
    }
  }

  pre {
    margin: 2rem 0;
    padding: 2rem;
    background: #282c34;
    border-radius: 8px;
    overflow-x: auto;
    font-family: 'Fira Code', monospace;
    line-height: 1.6;
    
    code {
      background: transparent;
      padding: 0;
      border-radius: 0;
    }
  }

  // インラインコード
  code {
    background: #f1f3f5;
    padding: 0.2em 0.4em;
    border-radius: 4px;
    font-size: 0.9em;
    color: #e83e8c;
  }

  // テーブル
  table {
    width: 100%;
    margin: 2.5rem 0;
    border-collapse: separate;
    border-spacing: 0;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    overflow: hidden;

    thead {
      background: #f8f9fa;
      
      th {
        padding: 1.2rem 1rem;
        border-bottom: 2px solid #dee2e6;
        font-weight: bold;
        text-align: left;
        color: #343a40;
      }
    }

    tbody {
      tr {
        &:nth-child(odd) {
          background: #fff;
        }
        
        &:nth-child(even) {
          background: #f8f9fa;
        }

        &:hover {
          background: #f1f3f5;
        }
      }

      td {
        padding: 1rem;
        border-bottom: 1px solid #dee2e6;
        color: #495057;
        text-align: left;
      }
    }
  }

  // 画像
  img {
    max-width: 100%;
    height: auto;
    margin: 2rem 0;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  // 画像キャプション
  figure {
    margin: 2.5rem 0;
    
    img {
      margin: 0;
    }

    figcaption {
      margin-top: 0.8rem;
      text-align: center;
      color: #6c757d;
      font-size: 0.9em;
    }
  }

  // 区切り線
  hr {
    margin: 3rem 0;
    border: 0;
    height: 1px;
    background: linear-gradient(to right, #576ef0, #dee2e6);
    opacity: 0.3;
  }

  // 注釈
  .note {
    margin: 2rem 0;
    padding: 1.5rem;
    background: rgba(87, 110, 240, 0.1);
    border-left: 4px solid #576ef0;
    border-radius: 4px;

    p {
      margin: 0;
      color: #495057;
    }
  }

  // ハイライト
  mark {
    background: rgba(87, 110, 240, 0.2);
    padding: 0.2em 0.4em;
    border-radius: 4px;
  }

  // キーボードキー
  kbd {
    background: #343a40;
    color: #fff;
    padding: 0.2em 0.4em;
    border-radius: 4px;
    font-size: 0.9em;
    box-shadow: inset 0 -2px 0 rgba(0,0,0,0.25);
  }

  // モバイル対応
  @include max-screen($bp-sp) {
    table {
      display: block;
      overflow-x: auto;
      white-space: nowrap;
      -webkit-overflow-scrolling: touch;
    }

    blockquote {
      padding: 1rem 1.5rem 1rem 2.5rem;
    }

    .note {
      padding: 1rem;
    }
  }
}

	.password-form {
  width: 320px;
  margin: 50px auto;
  padding: 30px;
  background: #2c3e50;
  border-radius: 10px;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  transform: perspective(1000px) rotateX(5deg);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.password-form:hover {
  transform: perspective(1000px) rotateX(0deg) translateY(-5px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
}

.password-form form {
  display: flex;
  flex-direction: column;
}

.password-form label {
  margin-bottom: 20px;
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  color: #ecf0f1;
  text-transform: uppercase;
  letter-spacing: 2px;
}

.password-form input[type="password"] {
  width: 100%;
  padding: 12px;
  margin-top: 10px;
  border: none;
  border-bottom: 2px solid #3498db;
  background: transparent;
  color: #ecf0f1;
  font-size: 18px;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.password-form input[type="password"]:focus {
  outline: none;
  border-color: #e74c3c;
  box-shadow: 0 4px 6px rgba(231, 76, 60, 0.1);
}

.password-form button {
  padding: 15px;
  background-color: #e74c3c;
  color: white;
  border: none;
  border-radius: 50px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
  overflow: hidden;
  position: relative;
}

.password-form button:hover {
  background-color: #c0392b;
  transform: translateY(-3px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
}

.password-form button::after {
  content: '→';
  position: absolute;
  top: 50%;
  left: 70%;
  transform: translate(-50%, -50%);
  opacity: 0;
  transition: all 0.3s ease;
}

.password-form button:hover::after {
  left: 85%;
  opacity: 1;
}

.password-form p {
  margin-top: 20px;
  font-size: 14px;
  color: #e74c3c;
  text-align: center;
  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
}

@keyframes shake {
  10%, 90% { transform: translate3d(-1px, 0, 0); }
  20%, 80% { transform: translate3d(2px, 0, 0); }
  30%, 50%, 70% { transform: translate3d(-4px, 0, 0); }
  40%, 60% { transform: translate3d(4px, 0, 0); }
}

/* 追加：遊び心のある要素 */
.password-form::before {
  content: '🔒';
  font-size: 40px;
  position: absolute;
  top: -30px;
  left: 50%;
  transform: translateX(-50%);
  transition: transform 0.3s ease;
}

.password-form:hover::before {
  transform: translateX(-50%) rotateY(180deg);
}

</style>