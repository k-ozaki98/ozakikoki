<div id="about" class="about">
  <div class="l-inner about__inner">
    <div class="about__text">
      <span class="layer-open about-trigger">
        <svg id="_レイヤー_1" data-name="レイヤー 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 170.74 57.76">
          <path class="about-path" d="M28.94,0l8.46,56.92h-15.13l-.79-10.23h-5.29l-.89,10.23H0L7.55,0H28.94Zm-7.84,36.6c-.75-6.45-1.5-14.42-2.25-23.91-1.51,10.9-2.46,18.87-2.84,23.91h5.09Z"/>
          <path class="about-path" d="M53.7,0V13.47c1.17-1.36,2.48-2.38,3.92-3.05,1.44-.67,3.01-1,4.69-1,1.95,0,3.63,.3,5.06,.91,1.43,.61,2.52,1.46,3.27,2.57,.75,1.1,1.2,2.18,1.35,3.23,.15,1.05,.23,3.3,.23,6.75v21.02c0,3.42-.23,5.97-.69,7.65-.46,1.68-1.53,3.13-3.22,4.36s-3.69,1.85-6.01,1.85c-1.66,0-3.22-.36-4.66-1.09-1.44-.73-2.76-1.82-3.96-3.28l-.91,3.52h-13.29V0h14.2Zm4.32,23.52c0-2.41-.15-3.99-.46-4.73-.3-.74-.9-1.11-1.79-1.11s-1.43,.32-1.69,.97c-.26,.65-.39,2.27-.39,4.87v20.11c0,2.51,.15,4.11,.44,4.82,.29,.7,.87,1.05,1.74,1.05s1.47-.36,1.74-1.09c.27-.73,.4-2.47,.4-5.24V23.52Z"/>
          <path class="about-path" d="M109.04,26.65v11.43c0,4.2-.21,7.27-.63,9.23-.42,1.96-1.32,3.79-2.71,5.48-1.38,1.7-3.16,2.95-5.33,3.76-2.17,.81-4.66,1.21-7.47,1.21-3.14,0-5.8-.35-7.98-1.04s-3.87-1.73-5.08-3.13c-1.21-1.39-2.07-3.08-2.58-5.06-.52-1.98-.77-4.95-.77-8.91v-11.95c0-4.34,.47-7.72,1.41-10.16,.94-2.44,2.62-4.39,5.06-5.87,2.44-1.48,5.55-2.21,9.35-2.21,3.19,0,5.92,.47,8.21,1.42s4.05,2.19,5.29,3.71c1.24,1.52,2.09,3.09,2.55,4.71s.69,4.08,.69,7.38Zm-14.2-3.52c0-2.39-.13-3.9-.39-4.52-.26-.62-.81-.93-1.65-.93s-1.41,.31-1.69,.93c-.28,.62-.42,2.13-.42,4.52v21.06c0,2.2,.14,3.64,.42,4.31s.83,1,1.65,1,1.4-.3,1.67-.91c.27-.61,.4-1.92,.4-3.94V23.13Z"/>
          <path class="about-path" d="M146.23,10.27V56.92h-14.45l.25-3.88c-.98,1.57-2.2,2.75-3.64,3.54-1.44,.79-3.1,1.18-4.97,1.18-2.13,0-3.9-.38-5.31-1.12s-2.44-1.75-3.11-2.99-1.08-2.54-1.25-3.88c-.16-1.35-.25-4.03-.25-8.03V10.27h14.2v31.75c0,3.63,.11,5.79,.33,6.47,.22,.68,.83,1.02,1.81,1.02,1.05,0,1.68-.35,1.88-1.05,.2-.7,.3-2.96,.3-6.79V10.27h14.2Z"/>
          <path class="about-path" d="M166.31,4.04v7.35h3.83v7.38h-3.83v24.96c0,3.07,.16,4.78,.47,5.13s1.63,.53,3.96,.53v7.52h-5.73c-3.23,0-5.54-.13-6.93-.4-1.38-.27-2.6-.89-3.66-1.86s-1.71-2.09-1.97-3.34c-.26-1.25-.39-4.2-.39-8.84V18.77h-3.06v-7.38h3.06V4.04h14.24Z"/>
        </svg>
      </span>
    </div>
    <p class="about__heading">
      I'm KOKI.<br>
      I am conducting website production in Osaka.
    </p>
    <div class="about-open about-trigger">
      <svg id="_レイヤー_1" data-name="レイヤー 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40.41 16.36">
        <line style="fill: none; stroke: #231815; stroke-miterlimit: 20; stroke-width: 2px;" x1="38.24" y1="8.18" y2="8.18"/>
        <polygon style="fill: #231815;" points="31.61 0 30.25 1.46 37.47 8.18 30.25 14.89 31.61 16.36 40.41 8.18 31.61 0"/>
      </svg>
    </div>
  </div>
</div>


<style lang="scss">
  @import '../styles/vars.scss';

  .about {
    width: 100%;
    height: 100vh;
    position: relative;

    &__inner {
      height: 100vh;
      position: relative;
      
    }

    &__text {
      width: 100%;
      cursor: pointer;
      margin-bottom: vw-pc(50);

      .layer-open {
        display: inline-block;
        width: 100%;
      }

      svg {
        height: vw-pc(300);
        width: auto;

        @include max-screen($bp-sp) {
          height: 8rem;
        }

        path {
          opacity: 0;
          transition: fill 0.5s ease;
        }

      }
    }

    &__heading {
      font-family: "Barlow", sans-serif;
      font-weight: 700;
      font-size: vw-pc(40);
      margin-bottom: vw-pc(80);

      @include max-screen($bp-sp) {
        font-size: 1.4rem;
        margin-bottom: 3rem;
      }
    }
  }

  .about-open {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
    width: vw-pc(100);
    height: vw-pc(100);
    background: #c13332;
    border-radius: 50%;
    overflow: hidden;
    cursor: pointer;

    @include max-screen($bp-sp) {
      width: 7rem;
      height: 7rem;
    }

    &::after {
      content: "";
      width: 100%;
      height: 100%;
      background: #fff;
      position: absolute;
      top: 0;
      right: 0;
      z-index: 2;
      transition: 0.5s;
    }

    svg {
      width: vw-pc(30);
      position: relative;
      z-index: 3;

      @include max-screen($bp-sp) {
        width: 2rem;
      }
    }

    &.hover {
      &::after {
        width: 0;
      }
    }
    
  }

  .about-path {
    fill: #000; 
    transition: fill 0.5s ease;
  }
  
</style>

<script>
  import {
		ScrollTrigger
	} from "gsap/ScrollTrigger";
  import gsap from "../scripts/gsap";

  window.addEventListener('load', () => {
    gsap.registerPlugin(ScrollTrigger);

    function animateSVG(className) {
      const paths = document.querySelectorAll(`.${className}`);

      paths.forEach((path, index) => {
        gsap.fromTo(path,
          { opacity: 0, y: 50, x: 20 },
          {
            opacity: 1,
            y: 0,
            x: 0,
            duration: 0.5,
            delay: index * 0.1,
            scrub: true,
            ease: 'power2.out'
          }      
        );
      });
    }

    function createTrigger(triggerClass, pathClass) {
      ScrollTrigger.create({
        trigger: `.${triggerClass}`,
        start: "top 70%",
        end: "bottom top",
        once: true,
        onEnter: () => animateSVG(pathClass),
      });
    }

    createTrigger('about', 'about-path');

    // ホバーエフェクトの追加
    const aboutLink = document.querySelector('.about__text .layer-open');
    const arrow = document.querySelector('.about-open');
    const aboutPaths = document.querySelectorAll('.about-path');
    const aboutLayer = document.querySelector('#aboutLayer');
    const aboutTriggers = document.querySelectorAll('.about-trigger');

    aboutTriggers.forEach((trigger) => {
      trigger.addEventListener('click', (e) => {
        e.preventDefault();
        aboutLayer.classList.add('active');
        document.body.classList.add('no-scroll');
      });
    });

    function applyHoverEffect(element, colorOnHover, colorOnLeave) {
      element.addEventListener('mouseenter', () => {
        aboutPaths.forEach((path, index) => {
          path.style.transition = `fill 0.5s ease ${index * 0.05}s`;
          path.style.fill = colorOnHover;
        });
        arrow.classList.add('hover');
      });

      element.addEventListener('mouseleave', () => {
        aboutPaths.forEach((path, index) => {
          path.style.transition = `fill 0.5s ease ${index * 0.05}s`;
          path.style.fill = colorOnLeave;
        });
        arrow.classList.remove('hover');
      });
    }

    applyHoverEffect(aboutLink, '#c13332', '#000');
    applyHoverEffect(arrow, '#c13332', '#000');
  });
</script>