---
import TopWorkList from "../components/TopWorkList";
import { newtClient, type NewtWorkArticle } from "../lib/newt";
const { items }: { items: NewtWorkArticle[] } = await newtClient.getContents({
  appUid: 'work',
  modelUid: 'article',
  query: {
    limit: 4
  }
})

---


<div id="work" class="work sec-inner" data-bg="#D8D8D8">
  <div class="l-inner work__inner">
    <div class="work__heading">
      <span class="layer-open work-trigger">
        <svg id="work" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 212.46 69.26">
          <path class="work-path" d="M32.66,68.32c-.5,0-.84-.13-1.03-.38L8.26,17.17c-1.13-2.5-2.25-4.24-3.38-5.21-1.13-.97-2.66-1.45-4.6-1.45-.19,0-.28-.19-.28-.56s.09-.56,.28-.56l3.57,.09c1.75,.13,3.16,.19,4.22,.19,2.25,0,4.69-.06,7.32-.19l3.85-.09c.19,0,.28,.19,.28,.56s-.09,.56-.28,.56c-1.88,0-3.27,.22-4.18,.66-.91,.44-1.36,1.19-1.36,2.25,0,.94,.31,2.06,.94,3.38l20.83,44.76-3.38,4.5,12.29-30.69,1.41,2.06-12.11,30.5c-.06,.25-.41,.38-1.03,.38ZM88.31,9.95c0,.38-.06,.56-.19,.56-2.13,0-3.97,.56-5.54,1.69-1.56,1.13-2.91,3.04-4.04,5.72l-19.99,50.02c-.06,.25-.41,.38-1.03,.38-.5,0-.84-.13-1.03-.38L33.22,17.17c-1.13-2.44-2.25-4.16-3.38-5.16-1.13-1-2.6-1.5-4.41-1.5-.19,0-.28-.19-.28-.56s.09-.56,.28-.56l3.57,.09c1.63,.13,2.97,.19,4.04,.19,1.75,0,3.57-.06,5.44-.19l2.53-.09c.19,0,.28,.19,.28,.56s-.09,.56-.28,.56c-1.13,0-1.94,.11-2.44,.33-.5,.22-.75,.61-.75,1.17,0,.75,.56,2.35,1.69,4.79l20.93,44.76-3.38,4.5,19.43-48.52c.5-1.31,.75-2.35,.75-3.1,0-1.38-.58-2.38-1.74-3-1.16-.62-2.96-.94-5.4-.94-.19,0-.28-.19-.28-.56s.09-.56,.28-.56l3.94,.09c2.13,.13,4.04,.19,5.72,.19,1.25,0,2.69-.06,4.32-.19l4.04-.09c.12,0,.19,.19,.19,.56Zm-35.19,3.28c0-1.81-1.35-2.72-4.04-2.72-.19,0-.28-.19-.28-.56s.09-.56,.28-.56l2.16,.09c1.25,.13,2.56,.19,3.94,.19,1.25,0,2.69-.06,4.32-.19l3.85-.09c.12,0,.19,.19,.19,.56s-.06,.56-.19,.56c-2.13,0-3.93,.55-5.4,1.64-1.47,1.1-2.77,3.02-3.89,5.77l-7.79,19.52-1.41-2.06,7.13-18.02c.75-1.69,1.13-3.06,1.13-4.13Z"/>
          <path class="work-path" d="M99.8,66.58c-2.78-1.78-4.93-4.19-6.43-7.23-1.5-3.03-2.25-6.33-2.25-9.9,0-4.07,.99-7.52,2.96-10.37,1.97-2.85,4.5-4.97,7.6-6.38,3.1-1.41,6.24-2.11,9.43-2.11,3.69,0,6.91,.91,9.67,2.72,2.75,1.82,4.86,4.21,6.33,7.18,1.47,2.97,2.21,6.12,2.21,9.43,0,3.88-.91,7.27-2.72,10.18-1.81,2.91-4.24,5.16-7.27,6.76-3.04,1.6-6.33,2.39-9.9,2.39s-6.84-.89-9.62-2.67Zm20.32-2.77c1.88-2.44,2.82-6.19,2.82-11.26,0-3.88-.64-7.35-1.92-10.42-1.28-3.06-3.05-5.46-5.3-7.18-2.25-1.72-4.82-2.58-7.7-2.58-3.38,0-5.99,1.22-7.84,3.66-1.85,2.44-2.77,5.94-2.77,10.51,0,3.82,.62,7.32,1.88,10.51,1.25,3.19,3,5.72,5.25,7.6,2.25,1.88,4.79,2.82,7.6,2.82,3.44,0,6.1-1.22,7.98-3.66Z"/>
          <path class="work-path" d="M136.64,67.47c0-.38,.09-.56,.28-.56,1.69,0,2.94-.17,3.75-.52,.81-.34,1.36-.95,1.64-1.83,.28-.88,.42-2.25,.42-4.13v-18.58c0-2.13-.25-3.66-.75-4.6-.5-.94-1.35-1.41-2.53-1.41-1,0-2.69,.47-5.07,1.41h-.19c-.25,0-.42-.14-.52-.42-.09-.28-.02-.48,.23-.61l10.89-5.16c.12-.06,.31-.09,.56-.09,.56,0,1.16,.72,1.78,2.16,.62,1.44,.94,3.28,.94,5.54v21.77c0,1.88,.23,3.25,.7,4.13,.47,.88,1.33,1.49,2.58,1.83,1.25,.34,3.19,.52,5.82,.52,.25,0,.38,.19,.38,.56s-.13,.56-.38,.56c-2,0-3.6-.03-4.79-.09l-6.94-.09-5.16,.09c-.81,.06-1.94,.09-3.38,.09-.19,0-.28-.19-.28-.56Zm16.8-34.3c1.81-1.47,3.5-2.21,5.07-2.21,1.38,0,2.69,.38,3.94,1.13,1.25,.75,1.88,1.66,1.88,2.72,0,.81-.28,1.5-.84,2.06-.56,.56-1.31,.84-2.25,.84-.56,0-1.05-.11-1.45-.33-.41-.22-.89-.55-1.45-.99-.56-.5-1.1-.88-1.6-1.13-.5-.25-1.1-.38-1.78-.38-.94,0-1.97,.47-3.1,1.41s-3.04,3.04-5.72,6.29l-.38-1.03c3.31-4.13,5.88-6.93,7.69-8.4Z"/>
          <path class="work-path" d="M169.01,67.47c0-.38,.09-.56,.28-.56,1.69,0,2.94-.17,3.75-.52,.81-.34,1.38-.97,1.69-1.88,.31-.91,.47-2.27,.47-4.08V11.92c0-2.25-.22-3.88-.66-4.88-.44-1-1.22-1.5-2.35-1.5-.94,0-2.38,.44-4.32,1.31h-.19c-.19,0-.34-.16-.47-.47-.13-.31-.06-.5,.19-.56L179.15,.09l.47-.09c.19,0,.38,.08,.56,.23,.19,.16,.28,.33,.28,.52V60.44c0,1.88,.16,3.25,.47,4.13,.31,.88,.88,1.49,1.69,1.83,.81,.34,2.06,.52,3.75,.52,.19,0,.28,.19,.28,.56s-.09,.56-.28,.56c-1.44,0-2.6-.03-3.47-.09l-5.07-.09-5.07,.09c-.88,.06-2.03,.09-3.47,.09-.19,0-.28-.19-.28-.56Zm9.38-16.23l14.64-11.82c2-1.56,3-2.94,3-4.13,0-1.56-1.78-2.35-5.35-2.35-.19,0-.28-.19-.28-.56s.09-.56,.28-.56c1.69,0,2.97,.03,3.85,.09l6.85,.09,6.29-.09c.81-.06,1.94-.09,3.38-.09,.19,0,.28,.19,.28,.56s-.09,.56-.28,.56c-2.32,0-4.88,.56-7.7,1.69-2.82,1.13-5.63,2.82-8.45,5.07l-16.14,12.67-.38-1.13Zm14.26,16.23c0-.38,.06-.56,.19-.56,3.13,0,4.69-.59,4.69-1.78,0-.56-.28-1.25-.84-2.06l-11.92-16.23,4.41-3.19,12.2,16.8c3.13,4.32,6.72,6.48,10.79,6.48,.19,0,.28,.19,.28,.56s-.1,.56-.28,.56c-1.44,0-2.6-.03-3.47-.09l-5.07-.09-6.76,.09c-1,.06-2.35,.09-4.04,.09-.13,0-.19-.19-.19-.56Z"/>
        </svg>
      </span>
    </div>

    <TopWorkList data={items} client:load />
  </div>
</div>


<style lang="scss">
  @import '../styles/vars.scss';

  .work {
    width: 100%;
    position: relative;
    padding-bottom: 0;
    padding-top: 0;

    @include max-screen($bp-sp) {
      padding: 5rem 0;
    }

    &__inner {
      position: relative;
      
    }

    &__heading {
      width: 100%;
      cursor: pointer;
      margin-bottom: vw-pc(100);

      .layer-open {
        display: inline-block;
        width: 100%;
        margin-bottom: 3rem;
      }

      svg {
        height: vw-pc(200);
        width: auto;

        @include max-screen($bp-sp) {
          height: 7rem;
        }

        path {
          opacity: 0;
          transition: fill 0.5s ease;
        }

      }
    }

    &__wrap {
      display: flex;
      justify-content: space-between;
      align-items: start;
      gap: 5rem;
    }

    &__img {
      width: 30%;
      aspect-ratio: 1;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }

    &__list-wrap {
      width: 65%;
    }

    &__name {
      font-size: 2.2rem;
      // margin-bottom: 1rem;
      font-weight: normal;
      font-family: "Cormorant Garamond", serif;
    }

    &__name-ja {
      font-size: 2.4rem;
      margin-bottom: 3rem;
    }

    &__list {
      display: flex;
      justify-content: start;
      margin-bottom: 0.5rem;

      dt {
        font-size: 1.6rem;
        font-weight: bold;
        width: 20%;
      }
      dd {
        font-size: 1.6rem;
        width: 80%;
      }
    }

    &__text-wrap {
      margin-bottom: 5rem;
    }

    &__text {
      font-size: 1.6rem;
      line-height: 2;
      margin-bottom: 2rem;
    }

    &__skills {
      margin-top: vw-pc(100);

      &-title {
        font-size: vw-pc(40);
        margin-bottom: vw-pc(50);
      }
    }
  }

  .skills-container {
    display: grid;
    gap: vw-pc(50);
  }

  .skill-category {
    h4 {
      font-size: vw-pc(24);
      margin-bottom: vw-pc(30);
    }
  }

  .skill-items {
    display: grid;
    gap: vw-pc(20);
  }

  .skill-item {
    .skill-info {
      display: flex;
      justify-content: space-between;
      margin-bottom: vw-pc(10);
      font-size: vw-pc(16);
    }

    .skill-bar {
      height: vw-pc(8);
      background: rgba(#000, 0.1);
      border-radius: vw-pc(4);
      overflow: hidden;
    }

    .skill-progress {
      width: 0;
      height: 100%;
      background: linear-gradient(45deg, #85FFBD 0%, #FFFB7D 100%);
      transform-origin: left;
      border-radius: vw-pc(4);
    }
  }

  .work-open {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
    width: vw-pc(100);
    height: vw-pc(100);
    background: #c13332;
    border-radius: 50%;
    overflow: hidden;
    cursor: pointer;

    @include max-screen($bp-sp) {
      width: 7rem;
      height: 7rem;
    }

    &::after {
      content: "";
      width: 100%;
      height: 100%;
      background: #fff;
      position: absolute;
      top: 0;
      right: 0;
      z-index: 2;
      transition: 0.5s;
    }

    svg {
      width: vw-pc(30);
      position: relative;
      z-index: 3;

      @include max-screen($bp-sp) {
        width: 2rem;
      }
    }

    &.hover {
      &::after {
        width: 0;
      }
    }
    
  }

  .work-path {
    fill: #000; 
    transition: fill 0.5s ease;
  }
  
</style>

<script>
  import {
		ScrollTrigger
	} from "gsap/ScrollTrigger";
  import gsap from "../scripts/gsap";

  function initSkillsAnimation() {
    const skills = document.querySelectorAll('.skill-progress');
  
    ScrollTrigger.create({
      trigger: '.work__skills',
      start: 'top 65%',
      onEnter: () => {
        skills.forEach(skill => {
          const width = skill.dataset.width;
          gsap.to(skill, {
            width: `${width}%`,
            duration: 1.5,
            ease: 'power4.out',
            stagger: {
              amount: 0.3
            }
          }) 
        })
      }
    })

  }


  window.addEventListener('load', () => {
    gsap.registerPlugin(ScrollTrigger);

    function animateSVG(className) {
      const paths = document.querySelectorAll(`.${className}`);

      paths.forEach((path, index) => {
        gsap.fromTo(path,
          { opacity: 0, y: 50, x: 20 },
          {
            opacity: 1,
            y: 0,
            x: 0,
            duration: 0.5,
            delay: index * 0.1,
            scrub: true,
            ease: 'power2.out'
          }      
        );
      });
    }

    function createTrigger(triggerClass, pathClass) {
      ScrollTrigger.create({
        trigger: `.${triggerClass}`,
        start: "top 65%",
        end: "bottom top",
        once: true,
        onEnter: () => animateSVG(pathClass),
      });
    }

    createTrigger('work', 'work-path');
    initSkillsAnimation();
  });
</script>